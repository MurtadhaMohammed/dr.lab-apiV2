generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  name      String?
  username  String   @unique
  password  String
  createtAt DateTime @default(now())
}

model Client {
  id        Int        @id @default(autoincrement())
  name      String
  labName   String?
  phone     String     @unique
  email     String?
  address   String?
  device    String?    @unique
  active    Boolean    @default(true)
  createdAt DateTime   @default(now())
  type      ClientType @default(trial)
  serials   Serial[]
  invoices  Invoice[]
}

model Serial {
  id           Int       @id @default(autoincrement())
  serial       String    @unique
  exp          Int
  active       Boolean   @default(true)
  platform     String?
  device       String?   @unique
  startAt      DateTime?
  registeredAt DateTime?
  price        Float     @default(0)
  createdAt    DateTime  @default(now())
  client       Client?   @relation(fields: [clientId], references: [id])
  clientId     Int?
  invoices     Invoice[]
  feature      Json? //{id, ... , startDate, endDate, price}
}

model Invoice {
  id        Int         @id @default(autoincrement())
  serialId  Int
  type      InvoiceType @default(CREATE)
  price     Float
  client    Client?     @relation(fields: [clientId], references: [id])
  clientId  Int?
  createdAt DateTime    @default(now())
  serial    Serial      @relation(fields: [serialId], references: [id])
}

model FeatureInvoice {
  id                 Int      @id @default(autoincrement())
  registeredFeatures Json?
  totalPrice         Float
  endPrice           Float
  createdAt          DateTime @default(now())
}

model Feature {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  note      String?
  price     Float?
  createdAt DateTime @default(now())
}

enum InvoiceType {
  CREATE
  UPDATE
  SUPPORT
}

enum ClientType {
  trial
  paid
}
