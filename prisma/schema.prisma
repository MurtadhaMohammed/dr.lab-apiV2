generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  name      String?
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Client {
  id         Int        @id @default(autoincrement())
  name       String
  password   String
  username   String     @unique
  labName    String?
  phone      String     @unique
  email      String?
  address    String?
  active     Boolean    @default(true)
  createdAt  DateTime   @default(now())
  device     String?    @unique
  otp        Int?
  isVerified Boolean?   @default(false)
  messages   Int?       @default(0)
  printCount Int?       @default(0)
  invoices   Invoice[]
  whatsapp   Whatsapp[]
  platform   String?
  planId     Int
  Plan       Plan?      @relation(fields: [planId], references: [id])
}

model Plan {
  id            Int       @id @default(autoincrement())
  name          String
  price         Int
  whatsappLimit Int?
  printLimit    Int?
  createdAt     DateTime  @default(now())
  Active        Boolean   @default(true)
  clients       Client[]
  invoices      Invoice[]
}

model Invoice {
  id        Int         @id @default(autoincrement())
  planId    Int
  type      InvoiceType @default(CREATE)
  price     Float
  clientId  Int?
  createdAt DateTime    @default(now())
  client    Client?     @relation(fields: [clientId], references: [id])
  Plan      Plan?       @relation(fields: [planId], references: [id])
}

model Whatsapp {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  name          String?
  fileName      String?
  labName       String?
  messageId     Int?
  receiverPhone String
  senderPhone   String
  clientId      Int?
  Client        Client?  @relation(fields: [clientId], references: [id])
}

enum InvoiceType {
  CREATE
  UPDATE
  SUPPORT
}
