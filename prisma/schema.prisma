generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  name      String?
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Client {
  id               Int        @id @default(autoincrement())
  name             String
  password         String?
  username         String?    @unique
  labName          String?
  phone            String     @unique
  email            String?
  address          String?
  active           Boolean    @default(true)
  createdAt        DateTime   @default(now())
  expiredAt        DateTime?
  device           String?    @unique
  otp              Int?
  otpCount         Int?       @default(0)
  otpCreatedAt     DateTime?
  isVerified       Boolean?   @default(false)
  balance          Float      @default(0)
  whatsappMsgPrice Float?     @default(0.05)
  printCount       Int?       @default(0)
  platform         String?
  code             String?    @default("964")
  planId           Int
  lastActive       DateTime?
  isTestUpdated    Boolean?   @default(false)
  Plan             Plan       @relation(fields: [planId], references: [id])
  invoices         Invoice[]
  Wallet           Wallet[]
  whatsapp         Whatsapp[]
}

model Plan {
  id         Int       @id @default(autoincrement())
  name       String
  type       PlanType  @unique
  price      Int
  printLimit Int?
  createdAt  DateTime  @default(now())
  Active     Boolean   @default(true)
  clients    Client[]
  invoices   Invoice[]
}

model Invoice {
  id        Int         @id @default(autoincrement())
  planId    Int
  type      InvoiceType @default(CREATE)
  price     Float
  clientId  Int?
  createdAt DateTime    @default(now())
  client    Client?     @relation(fields: [clientId], references: [id])
  Plan      Plan        @relation(fields: [planId], references: [id])
}

model Whatsapp {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  name          String?
  fileName      String?
  labName       String?
  messageId     Int?
  receiverPhone String
  senderPhone   String
  clientId      Int?
  Client        Client?  @relation(fields: [clientId], references: [id])
}

model Wallet {
  id               Int         @id @default(autoincrement())
  amount           Int
  whatsappMsgPrice Float?
  createdAt        DateTime    @default(now())
  type             PaymentType @default(BALANCE)
  clientId         Int
  Client           Client      @relation(fields: [clientId], references: [id])
}

enum InvoiceType {
  CREATE
  UPDATE
  SUPPORT
}

enum PlanType {
  FREE
  SUBSCRIPTION
  PAID
}

enum PaymentType {
  BALANCE
}
